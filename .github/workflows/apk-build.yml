name: APK Build
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of build: internal-testing or production-release'
        required: true
        default: 'internal-testing'
      tag_name:
        description: 'Tag name for the release'
        required: false
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      INTERNAL_TESTING: "internal-testing"
      PRODUCTION_RELEASE: "production-release"
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with: 
          java-version: 17
          distribution: 'temurin'
          
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools-version: 33.0.0
      - name: Setup keystore
        env: 
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_CONTENTS_BASE64 }}
        run:
          echo "$KEYSTORE_BASE64" | base64 -d > ./android/app/my-release-key.keystore

      - name: Build APK
        run: |
          if [ ${{ github.event.inputs.release_type }} == "${{env.PRODUCTION_RELEASE}}" ]; then
          ./gradlew assembleRelease
          else 
          ./gradlew assembleDebug
          fi

      - name: Upload APK (internal-testing)
        if: ${{ github.event.inputs.release_type == env.INTERNAL_TESTING }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Create Github Release (production-release)
        if: ${{ github.event.inputs.release_type == env.PRODUCTION_RELEASE }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: ${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload APK (production-release)
        if: ${{ github.event.inputs.release_type == env.PRODUCTION_RELEASE }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: app-release-unsigned.apk
          asset_content_type: application/vnd.android.package-archive

